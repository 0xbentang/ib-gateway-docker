name: Detect IB-Gateway Releases

on:
  schedule:
    - cron: "0 8 * * *"

  workflow_dispatch:

defaults:
  run:
    shell: "bash -Eeuo pipefail -x {0}"

jobs:
  detect-release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        channel: ["stable", "latest"]
    steps:
      - name: Get Latest Version
        id: version
        run: |
          res=$(curl -s https://download2.interactivebrokers.com/installers/tws/${{ matrix.channel }}-standalone/version.json | sed 's/tws${{ matrix.channel }}_callback(//g;s/);//g')
          build_version=$(jq -r '.buildVersion' <<< "$res")
          #build_dateTime=$(jq -r '.buildDateTime' <<< "$res")
          echo "::set-output name=build_version::$build_version"
          #echo "::set-output name=build_dateTime::$build_dateTime"

      - name: Check if there is an update
        id: check-update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/UnusualAlpha/ib-gateway-docker/git/trees/gh-pages?recursive=1 --jq '.tree[] | select(.path | contains("ibgateway-releases/")) | .path' > /tmp/ibgateway-releases
          if grep -qF 'ibgateway-${{ steps.version.outputs.build_version }}-standalone-linux-x64.sh' /tmp/ibgateway-releases
          then
            echo "::set-output name=has_update::false"
          else
            echo "::set-output name=has_update::true"
          fi

      # - uses: actions/checkout@v3
      #   if: ${{ steps.check-update.outputs.has_update == 'true' }}
      #   with:
      #     ref: gh-pages
      #     lfs: true

      - name: Download
        if: ${{ steps.check-update.outputs.has_update == 'true' }}
        run: |
          download_url='https://download2.interactivebrokers.com/installers/ibgateway/${{ matrix.channel }}-standalone/ibgateway-${{ matrix.channel }}-standalone-linux-x64.sh'
          dest='ibgateway-${{ steps.version.outputs.build_version }}-standalone-linux-x64.sh'
          curl -sSL "$download_url" --output "$dest"
          sha256sum "$dest" > "${dest}.sha256"

      - name: Create release
        if: ${{ steps.check-update.outputs.has_update == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.build_version }} ibgateway-*

      # - name: Commit
      #   if: ${{ steps.check-update.outputs.has_update == 'true' }}
      #   run: |
      #     cd ./ibgateway-releases
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add .
      #     git commit -m "add new ib-gateway ${{ steps.version.outputs.build_version }} (${{ matrix.channel }}) release file"
      #     success=0
      #     attempts=0
      #     until [ "$success" -ne "0" ] || [ "$attempts" -eq "10" ]
      #     do
      #         let ++attempts
      #         git pull
      #         git push
      #         if $(git push); then success=1; fi
      #     done
      #     if [ "$success" -eq "0" ]
      #     then
      #         echo "Gave up after $attempts attempts"
      #     fi

      - name: Create Issue
        if: ${{ steps.check-update.outputs.has_update == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body=$(cat << EOF
          **Build Version:** ${{ steps.version.outputs.build_version }}
          **Channel:** ${{ matrix.channel }}
          [ibgateway-releases](https://github.com/UnusualAlpha/ib-gateway-docker/tree/gh-pages/ibgateway-releases)
          EOF)
          gh issue create \
            --repo "$GITHUB_REPOSITORY" \
            --title "IB-Gateway ${{ steps.version.outputs.build_version }} (${{ matrix.channel }}) was released" \
            --body "$body"
